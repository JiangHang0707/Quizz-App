// Generated by view binder compiler. Do not edit!
package com.example.csc2074_19051374_assignment.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.csc2074_19051374_assignment.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityQuestionBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button buttonSubmit;

  @NonNull
  public final TextView option1;

  @NonNull
  public final TextView option2;

  @NonNull
  public final Button previousButton;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final TextView progressText;

  @NonNull
  public final TextView questionText;

  @NonNull
  public final Button resetButton;

  private ActivityQuestionBinding(@NonNull LinearLayout rootView, @NonNull Button buttonSubmit,
      @NonNull TextView option1, @NonNull TextView option2, @NonNull Button previousButton,
      @NonNull ProgressBar progressBar, @NonNull TextView progressText,
      @NonNull TextView questionText, @NonNull Button resetButton) {
    this.rootView = rootView;
    this.buttonSubmit = buttonSubmit;
    this.option1 = option1;
    this.option2 = option2;
    this.previousButton = previousButton;
    this.progressBar = progressBar;
    this.progressText = progressText;
    this.questionText = questionText;
    this.resetButton = resetButton;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityQuestionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityQuestionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_question, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityQuestionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_submit;
      Button buttonSubmit = ViewBindings.findChildViewById(rootView, id);
      if (buttonSubmit == null) {
        break missingId;
      }

      id = R.id.option_1;
      TextView option1 = ViewBindings.findChildViewById(rootView, id);
      if (option1 == null) {
        break missingId;
      }

      id = R.id.option_2;
      TextView option2 = ViewBindings.findChildViewById(rootView, id);
      if (option2 == null) {
        break missingId;
      }

      id = R.id.previous_button;
      Button previousButton = ViewBindings.findChildViewById(rootView, id);
      if (previousButton == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.progressText;
      TextView progressText = ViewBindings.findChildViewById(rootView, id);
      if (progressText == null) {
        break missingId;
      }

      id = R.id.question_text;
      TextView questionText = ViewBindings.findChildViewById(rootView, id);
      if (questionText == null) {
        break missingId;
      }

      id = R.id.reset_button;
      Button resetButton = ViewBindings.findChildViewById(rootView, id);
      if (resetButton == null) {
        break missingId;
      }

      return new ActivityQuestionBinding((LinearLayout) rootView, buttonSubmit, option1, option2,
          previousButton, progressBar, progressText, questionText, resetButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
